<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nds.library.main.IMainDAO">

	<select id="getSessionId" resultType="com.nds.library.main.User"
		parameterType="java.util.Map">
		select user_id, nds_number, password, name, position,
		department, picture,
		registered_date, enabled from users where
		nds_number = #{nds_number}
	</select>

	<select id="StudyBoardList" resultType="com.nds.library.board.Board">
		select rownum as board_num, title, boarded_date, board_id
		from boards
		where <![CDATA[ ROWNUM <= 10 ]]>
		and
		category='스터디'
		order by BOARDED_DATE desc
		<!-- SELECT * FROM Boards -->
	</select>

	<select id="NoticeBoardList" resultType="com.nds.library.board.Board">
		select ROWNUM as board_num, title, boarded_date, board_id
		from boards
		where <![CDATA[ ROWNUM <= 10 ]]>
		and
		category='공지'
		order by BOARDED_DATE desc
		<!-- SELECT * FROM Boards -->
	</select>

	<select id="MonthlyChampion" resultType="com.nds.library.board.Board">
		select rownum, picture,
		department, position, name, read_count
		from users join
		(
		select user_id ,
		count(*) as read_count
		from users join borrowings using (user_id)
		where
		TO_CHAR(BORROWING_DATE, 'YYYY-MM') = TO_CHAR(TO_DATE(sysdate),
		'YYYY-MM')
		group by user_id
		order by read_count desc
		) using (user_id)
		where rownum=1
	</select>

	<select id="MonthlyBookList" resultType="com.nds.library.main.Book">
		select *
		from (select rownum as r, isbn, read_count, title, publisher,
		author,
		image
		from (
		select distinct isbn, read_count, title, publisher,
		author, image
		from
		((
		select isbn, count(*) as read_count
		from(
		select *
		from borrowings join books using(book_id) join informations
		using(information_id)
		where TO_CHAR(BORROWING_DATE, 'YYYY-MM') =
		TO_CHAR(TO_DATE(sysdate),
		'YYYY-MM')
		)
		group by isbn
		) join informations
		using(isbn))
		order by read_count desc))
		where <![CDATA[ r <= 3 ]]>
	</select>


	<select id="NewRegisteredBookList" resultType="com.nds.library.main.Book">
		select *
		from(
		select distinct title, image, registered_date, author, publisher
		from books x, informations y
		where x.information_id = y.information_id
		order by registered_date desc
		)
		where <![CDATA[ rownum <= 3 ]]>
	</select>


   <select id="totalCount" parameterType="java.util.Map"
      resultType="java.lang.Integer">
       SELECT count(*) as 
         FROM(
         SELECT distinct image, title, author, publisher, TO_CHAR(pubdate,
         'yyyy-mm-dd') AS pubdate, current_state, ISBN
         FROM books join informations using(information_id)
      <if test="filter==0">
         WHERE category_id=#{category_id} and (current_state='대출가능' or current_state='대출')
      </if>
      <if test="filter==1">
          WHERE category_id=#{category_id} and current_state='대출가능'
      </if>
      )
   </select>

   <select id="totalCount2" parameterType="java.util.Map"
      resultType="java.lang.Integer">
      SELECT count(*) as 
         FROM(
         SELECT distinct image, title, author, publisher, TO_CHAR(pubdate,
         'yyyy-mm-dd') AS pubdate, current_state, ISBN
         FROM books join informations using(information_id)
      <if test="filter==0">
      <if test="key==1">
         WHERE title like '%' || #{searchWord} || '%' and (current_state='대출가능' or current_state='대출')
      </if>
      <if test="key==2">
         WHERE author like '%' || #{searchWord} || '%' and (current_state='대출가능' or current_state='대출')
      </if>
      <if test="key==3">
         WHERE publisher like '%' || #{searchWord} || '%' and (current_state='대출가능' or current_state='대출')
      </if>
      </if>
      <if test="filter==1">
      <if test="key==1">
         WHERE title like '%' || #{searchWord} || '%' and current_state='대출가능'
      </if>
      <if test="key==2">
         WHERE author like '%' || #{searchWord} || '%' and current_state='대출가능'
      </if>
      <if test="key==3">
         WHERE publisher like '%' || #{searchWord} || '%' and current_state='대출가능'
      </if>
      </if>
      )
   </select>

   <select id="bookList" resultType="com.nds.library.main.Book">
      SELECT * FROM books
   </select>

   <select id="bookInfo"   parameterType="java.util.Map" resultType="com.nds.library.main.Information">
          SELECT ROWNUM, image, title, ISBN, author, publisher, pubdate, information_id,
      current_state, explanation
      FROM(SELECT image, title, ISBN, author,
      publisher, TO_CHAR(pubdate,'yyyy-mm-dd') AS pubdate, information_id, current_state,
      explanation
      FROM books join informations using(information_id)
      WHERE ISBN=#{isbn})
   </select>

   <select id="ownInfo" parameterType="java.util.Map" resultType="com.nds.library.main.Book">
      select book_id, location, current_state, TO_CHAR(scheduled_date,'yyyy-mm-dd') AS scheduled_date, reservation_id
      from ((books join informations using(information_id)) left outer join borrowings using(book_id)) left outer join reservations using(book_id)
      where (current_state='대출가능' or current_state='대출')
      and ISBN=#{isbn}
   </select>
   
   <select id="bookReview" parameterType="java.util.Map" resultType="com.nds.library.main.Review">
      select rownum, star, content, name, reviewed_date
      from (SELECT star, content, name, TO_CHAR(reviewed_date,'yyyy-mm-dd') AS reviewed_date
      from reviews join users using(user_id) join informations using(information_id) 
      where isbn=#{isbn}
      order by reviews.reviewed_date)
   </select>
   
   <insert id="add" parameterType="com.nds.library.main.Review">
       INSERT INTO reviews (review_id, user_id, information_id, star, content, reviewed_date, modified_date, read_count, blind)
      VALUES ((SELECT NVL(MAX(review_id),0)+1 FROM reviews), #{user_id},  #{information_id}, #{star},  #{content}, sysdate, null, 0, 0)
   </insert>

   <select id="result" parameterType="java.util.Map"
      resultType="com.nds.library.main.Information">
 		SELECT *
         FROM(
         select rownum rn, aa.*
        from(
         SELECT distinct image, title, author, publisher, TO_CHAR(pubdate,
         'yyyy-mm-dd') AS pubdate, current_state, ISBN
         FROM books join informations using(information_id))aa)
         where rn between #{startNumber} and #{startNumber}+9
         
      <if test="filter==1">
         <if test="key==1">
            and title like '%' || #{searchWord} || '%' and current_state='대출가능'
         </if>
         <if test="key==2">
            and author like '%' || #{searchWord} || '%' and current_state='대출가능'
         </if>
         <if test="key==3">
            and publisher like '%' || #{searchWord} || '%' and current_state='대출가능'
         </if>
      </if>
      
      <if test="filter==0">
         <if test="key==1">
            and title like '%' || #{searchWord} || '%' and (current_state='대출가능' or current_state='대출')
         </if>
         <if test="key==2">
            and author like '%' || #{searchWord} || '%' and (current_state='대출가능' or current_state='대출')
         </if>
         <if test="key==3">
            and publisher like '%' || #{searchWord} || '%' and (current_state='대출가능' or current_state='대출')
         </if>
      </if>
       order by pubdate desc
   </select>
   
   <select id="data" resultType="com.nds.library.main.Borrowing"  parameterType="java.util.Map">
      SELECT ROWNUM, image, title, ISBN, author, publisher, TO_CHAR(pubdate, 'yyyy-mm-dd') AS pubdate, current_state, book_id
       FROM(
         select rownum rn, aa.*
        from(
        select *
        from books join informations using(information_id)
      <if test="filter==0">
         WHERE category_id=#{category_id} and (current_state='대출가능' or current_state='대출')
      </if>
      <if test="filter==1">
         WHERE category_id=#{category_id} and current_state='대출가능'
      </if>
      )aa)
       where rn between #{startNumber} and #{startNumber}+9
      ORDER BY registered_date desc
   </select>
   
   <select id="findBookById" resultType="com.nds.library.main.Book">
   	SELECT * FROM books WHERE book_id = #{book_id}
   </select>
   
   <insert id="borrowBook" parameterType="com.nds.library.main.Borrowing">
   	INSERT INTO borrowings(borrowing_id, book_id, user_id, borrowing_date) VALUES((SELECT NVL(MAX(borrowing_id),0)+1 FROM borrowings), #{book_id}, #{user_id}, NULL)
   </insert>
   
   <update id="updateCurrentState" parameterType="java.util.Map">
   	UPDATE books SET current_state = #{current_state} WHERE book_id = #{book_id}
   </update>
   
   <insert id="reserveBook" parameterType="com.nds.library.main.Borrowing">
   	INSERT INTO reservations(reservation_id, book_id, user_id) 
   	VALUES((SELECT NVL(MAX(reservation_id),0)+1 FROM reservations), #{book_id}, #{user_id})
   </insert>
   
   <select id="getBorrowingCount" resultType="java.lang.Integer">
		select count(*) as borrowing_count from borrowings where user_id = #{user_id} and borrowing_date is not null and returned_date is null
	</select>
	
 	<select id="isReserving" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*)
		from reservations
		where book_id = #{book_id}
	</select>
	
	<select id = "getIsbn" resultType="java.lang.String" parameterType="java.util.Map">
		SELECT isbn
		FROM books join informations using(information_id)
		WHERE book_id = #{book_id}
	</select>
</mapper>   